abstype Int : T
abstype Bool : T

fun id<a> (x : a) : a = x

fun idIntInf (x : Int) : Int = let var z = id(x) in z

fun idIntChk (x : Int) : Int = id(x)

fun idTwo (i : Int, b : Bool) : Int = let
  var res = id(i)
  var k = id(b)
  in res

fun f (x:Int, g : (Int, Int) -> Int) : Int = g (x,x)

fun h<a:T> (x:Int, g : (Int, a) -> Int, z : a) : Int = g (x, z)

fun j (x:Int, u : (Int, Int) -> Int) : Int = f (x, u)

-- fun k<b:T, c> (x: Int, g : (Int, b) -> Int, z : c) : Int = let
--    var ans = h (x, g, z)
-- in ans
